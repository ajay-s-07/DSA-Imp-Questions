You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

//Used two pointers/prefix sum
public int maxArea(int[] height) {
    int n = height.length;
    int sum = 0; int max = 0; 
    int i=0, j=n-1;
    while(i < j){
        if(height[j] > height[i]){
            int x = (j-i) * height[i];
            max = Math.max(max,x);
            i++;
        }
        else{
            int x = (j-i) * height[j];
            max = Math.max(max,x);
            j--;
        }
    }
    return max;
}
